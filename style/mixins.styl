// cross-browser compatibility
transition(args...)
  -webkit-transition args
  transition args

transform(args...)
  -webkit-transform args
  transform args

transform-origin(args...)
  -webkit-transform-origin args
  transform-origin args

animation(args...)
  -webkit-animation args
  animation args

animation-name(args...)
  -webkit-animation-name args
  animation-name args

animation-direction(args...)
  -webkit-animation-direction args
  animation-direction args

animation-duration(args...)
  -webkit-animation-duration args
  animation-duration args

animation-delay(args...)
  -webkit-animation-delay args
  animation-delay args

animation-timing-function(args...)
  -webkit-animation-timing-function args
  animation-timing-function args

perspective(args...)
  -webkit-perspective args
  perspective args

box-sizing(args...)
  -webkit-box-sizing args
  box-sizing args

// Flexible box model compatibility
display(value)
  if value == box
    display -webkit-box
    display box
  else if value == inline-box
    display -webkit-inline-box
    display inline-box
  else
    display value

box-flex(args...)
  -webkit-box-flex args
  box-flex args

box-ordinal-group(args...)
  -webkit-box-ordinal-group args
  box-ordinal-group args

box-pack(args...)
  -webkit-box-pack args
  box-pack args

box-direction(args...)
  -webkit-box-direction args
  box-direction args

box-align(args...)
  -webkit-box-align args
  box-align args

box-orient(args...)
  -webkit-box-orient args
  box-orient args

// add a folded corner
fold-corner(selector, cornerSize, bgColor, isRight = false)

  {selector}:after, {selector}:before
    content ""
    position absolute
    right -(cornerSize)+1 unless isRight
    left -(cornerSize)+1 if isRight

  {selector}:after
    background bgColor
    width cornerSize
    top 0
    bottom cornerSize

  {selector}:before
    borderWidth = unit(cornerSize/2, 'px')
    border borderWidth solid transparent
    border-right-color bgColor if isRight
    border-left-color bgColor unless isRight
    border-left-width -1+borderWidth if isRight
    border-top-color bgColor 
    bottom 0

// button overloading
button(selector, bgColor, iconWhite = false)

  {selector}
    background-image -webkit-linear-gradient(top, lighten(bgColor, 75%), bgColor)
    background-color bgColor
    border-color bgColor bgColor lighten(bgColor, 50%)
    if iconWhite
      i
        background-image url(glyphicons-halflings-white.png)

  {selector}:focus, {selector}:hover, {selector}:active, {selector}:active, {selector}.disabled, {selector}[disabled]
    background-color bgColor

  {selector}.active, {selector}:active, {selector}.disabled, {selector}[disabled]
    background-image none